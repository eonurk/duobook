generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model UserProgress {
  id                           Int                  @id @default(autoincrement())
  userId                       String               @unique
  level                        Int                  @default(1)
  points                       Int                  @default(0)
  updatedAt                    DateTime             @updatedAt
  lastLogin                    DateTime?
  streak                       Int                  @default(0)
  dailyChallengesLastGenerated DateTime?
  subscriptionTier             SubscriptionTier     @default(FREE)
  isBanned                     Boolean              @default(false)
  moderationWarnings           Int                  @default(0)
  userDailyChallenges          UserDailyChallenge[]
  vocabularySrsData            Json?
}

model Story {
  id             Int      @id @default(autoincrement())
  userId         String
  story          String
  createdAt      DateTime @default(now())
  description    String?
  sourceLanguage String?
  targetLanguage String?
  difficulty     String?
  length         String?
  shareId        String   @unique @default(cuid())
  isPublic       Boolean  @default(true)

  @@index([userId])
}

model Achievement {
  id               String            @id
  name             String
  description      String
  points           Int               @default(0)
  userAchievements UserAchievement[]
}

model UserAchievement {
  id            Int         @id @default(autoincrement())
  userId        String
  achievementId String
  unlockedAt    DateTime    @default(now())
  achievement   Achievement @relation(fields: [achievementId], references: [id])

  @@unique([userId, achievementId])
  @@index([userId])
}

model Challenge {
  id                  String               @id
  title               String
  description         String
  xpReward            Int
  type                String
  requiredCount       Int?
  isCore              Boolean              @default(false)
  userDailyChallenges UserDailyChallenge[]
}

model UserDailyChallenge {
  id           Int          @id @default(autoincrement())
  userId       String
  challengeId  String
  day          DateTime
  progress     Int          @default(0)
  completed    Boolean      @default(false)
  completedAt  DateTime?
  challenge    Challenge    @relation(fields: [challengeId], references: [id])
  userProgress UserProgress @relation(fields: [userId], references: [userId])

  @@unique([userId, challengeId, day])
  @@index([userId, day])
}

enum SubscriptionTier {
  FREE
  PREMIUM
  PRO
}
